{"version":3,"file":"static/js/825.582aca00.chunk.js","mappings":"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","sources":["components/BeerListItem/BeerListItem.styled.jsx","components/BeerListItem/BeerListItem.jsx","components/BeerList/BeerList.styled.jsx","components/BeerList/BeerList.jsx","pages/MainPage/MainPage.jsx","utils/services.js","utils/store.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  padding-top: 30vh;\n  padding-bottom: 30vh;\n\n  img {\n    max-height: 400px;\n  }\n\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    color: #333;\n    text-decoration: none;\n    cursor: pointer;\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: #ff4500;\n    }\n  }\n\n  h2 {\n    font-size: 24px;\n    margin-bottom: 0.5rem;\n  }\n`;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item } from './BeerListItem.styled';\n\nconst BeerItem = memo(({ id, name, imageUrl, handleRightClick, selected }) => {\n  return (\n    <div>\n      <Item\n        onContextMenu={event => handleRightClick(event, id)}\n        style={{\n          background: selected ? 'lightblue' : 'white',\n        }}\n      >\n        <Link to={`/${id}`}>\n          <img src={imageUrl} alt={name} />\n          <h2>{name}</h2>\n        </Link>\n      </Item>\n    </div>\n  );\n});\n\nBeerItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  handleRightClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default BeerItem;\n","import styled from '@emotion/styled';\n\nexport const BeerListContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n","import useBeerStore from 'utils/store';\nimport BeerItem from 'components/BeerListItem/BeerListItem';\nimport { BeerListContainer } from './BeerList.styled';\n\nconst BeerList = () => {\n  const beersList = useBeerStore(state => state.beerList);\n  const toggleBeerSelection = useBeerStore(state => state.toggleBeerSelection);\n  const selectedBeers = useBeerStore(state => state.selectedBeers);\n  const deleteSelectedBeers = useBeerStore(state => state.deleteSelectedBeers);\n\n  const handleRightClick = (event, id) => {\n    event.preventDefault();\n    toggleBeerSelection(id);\n  };\n\n  return (\n    <div>\n      {selectedBeers.length > 0 && (\n        <button\n          onClick={deleteSelectedBeers}\n          style={{\n            width: '100%',\n            padding: '25px 30px',\n            cursor: 'pointer',\n          }}\n        >\n          Delete\n        </button>\n      )}\n      <BeerListContainer>\n        {beersList?.slice(0, 15).map(({ id, name, image_url: imageUrl }) => {\n          return (\n            <BeerItem\n              key={id}\n              id={id}\n              name={name}\n              imageUrl={imageUrl}\n              handleRightClick={handleRightClick}\n              selected={selectedBeers.includes(id)}\n            />\n          );\n        })}\n      </BeerListContainer>\n    </div>\n  );\n};\n\nexport default BeerList;\n","import BeerList from 'components/BeerList/BeerList';\nimport { useEffect } from 'react';\nimport useBeerStore from 'utils/store';\n\nconst MainPage = () => {\n  const fetchBeerList = useBeerStore(state => state.fetchBeerList);\n\n  useEffect(() => {\n    fetchBeerList(1);\n  }, [fetchBeerList]);\n\n  return <BeerList />;\n};\n\nexport default MainPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.punkapi.com/v2/beers';\n\nexport const getBeersList = async numberPage => {\n  const { data } = await axios.get('', {\n    params: {\n      page: numberPage,\n    },\n  });\n  return data;\n};\n","import { create } from 'zustand';\n\nimport { getBeersList } from './services';\n\nconst useBeerStore = create((set, get) => ({\n  beerList: [],\n  page: 1,\n  selectedBeers: [],\n  isFetched: false,\n  isLoading: false,\n\n  fetchBeerList: async page => {\n    const { isFetched, isLoading } = get();\n    if (isFetched || isLoading) {\n      return;\n    }\n\n    set({ isLoading: true });\n\n    try {\n      const data = await getBeersList(page);\n      set(state => ({\n        beerList: [...state.beerList, ...data],\n        isFetched: true,\n      }));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  toggleBeerSelection: id => {\n    set(state => {\n      const isSelected = state.selectedBeers.includes(id);\n      const updatedSelectedBeers = isSelected\n        ? state.selectedBeers.filter(beerId => beerId !== id)\n        : [...state.selectedBeers, id];\n      return { selectedBeers: updatedSelectedBeers };\n    });\n  },\n\n  deleteSelectedBeers: () => {\n    set(state => {\n      const filteredBeerList = state.beerList.filter(\n        beer => !state.selectedBeers.includes(beer.id)\n      );\n\n      if (filteredBeerList.length === 0) {\n        const nextPage = state.page + 1;\n        state.isFetched = false;\n        state.fetchBeerList(nextPage);\n        return {\n          beerList: filteredBeerList,\n          selectedBeers: [],\n          page: nextPage,\n        };\n      }\n\n      return {\n        beerList: filteredBeerList,\n        selectedBeers: [],\n        page: state.page,\n      };\n    });\n  },\n}));\n\nexport default useBeerStore;\n"],"names":["Item","styled","memo","id","name","imageUrl","handleRightClick","selected","onContextMenu","event","style","background","to","src","alt","BeerListContainer","beersList","useBeerStore","state","beerList","toggleBeerSelection","selectedBeers","deleteSelectedBeers","preventDefault","length","onClick","width","padding","cursor","slice","map","image_url","includes","fetchBeerList","useEffect","axios","getBeersList","numberPage","params","page","data","create","set","get","isFetched","isLoading","alert","message","filter","beerId","filteredBeerList","beer","nextPage"],"sourceRoot":""}