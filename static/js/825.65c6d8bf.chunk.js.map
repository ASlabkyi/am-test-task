{"version":3,"file":"static/js/825.65c6d8bf.chunk.js","mappings":"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","sources":["components/BeerListItem/BeerListItem.styled.jsx","components/BeerListItem/BeerListItem.jsx","components/BeerList/BeerList.styled.jsx","components/BeerList/BeerList.jsx","pages/MainPage/MainPage.jsx","utils/services.js","utils/store.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  padding-top: 30vh;\n  padding-bottom: 30vh;\n  text-align: center;\n\n  img {\n    max-height: 400px;\n  }\n\n  a {\n    color: #333;\n    text-decoration: none;\n    cursor: pointer;\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: #ff4500;\n    }\n  }\n\n  h2 {\n    font-size: 24px;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const ItemWrapper = styled.div`\n  padding: 10px;\n  border-radius: 10px;\n  height: 510px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  transition: background 0.2s ease-in-out;\n`;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item, ItemWrapper } from './BeerListItem.styled';\n\nconst BeerItem = memo(({ id, name, imageUrl, handleRightClick, selected }) => {\n  return (\n    <div>\n      <Item onContextMenu={event => handleRightClick(event, id)}>\n        <Link to={`/${id}`}>\n          <ItemWrapper\n            style={{\n              background: selected ? 'lightblue' : 'white',\n            }}\n          >\n            <img src={imageUrl} alt={name} />\n            <h2>{name}</h2>\n          </ItemWrapper>\n        </Link>\n      </Item>\n    </div>\n  );\n});\n\nBeerItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  handleRightClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default BeerItem;\n","import styled from '@emotion/styled';\n\nexport const BeerListContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const DeleteButton = styled.button`\n  position: absolute;\n  width: 100%;\n  padding: 25px 30px;\n  cursor: pointer;\n  background-color: #ff3b30;\n  color: #fff;\n  font-size: 25px;\n  border: none;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #e53935;\n  }\n\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.3s ease;\n`;\n","import useBeerStore from 'utils/store';\nimport BeerItem from 'components/BeerListItem/BeerListItem';\nimport { BeerListContainer, DeleteButton } from './BeerList.styled';\nimport { useEffect, useState } from 'react';\n\nconst BeerList = () => {\n  const beersList = useBeerStore(state => state.beerList);\n  const toggleBeerSelection = useBeerStore(state => state.toggleBeerSelection);\n  const selectedBeers = useBeerStore(state => state.selectedBeers);\n  const deleteSelectedBeers = useBeerStore(state => state.deleteSelectedBeers);\n\n  const [isButtonVisible, setIsButtonVisible] = useState(false);\n\n  useEffect(() => {\n    setIsButtonVisible(selectedBeers.length > 0);\n  }, [selectedBeers]);\n\n  const handleRightClick = (event, id) => {\n    event.preventDefault();\n    toggleBeerSelection(id);\n  };\n\n  return (\n    <div>\n      <DeleteButton isVisible={isButtonVisible} onClick={deleteSelectedBeers}>\n        Delete\n      </DeleteButton>\n      <BeerListContainer>\n        {beersList?.slice(0, 15).map(({ id, name, image_url: imageUrl }) => {\n          return (\n            <BeerItem\n              key={id}\n              id={id}\n              name={name}\n              imageUrl={imageUrl}\n              handleRightClick={handleRightClick}\n              selected={selectedBeers.includes(id)}\n            />\n          );\n        })}\n      </BeerListContainer>\n    </div>\n  );\n};\n\nexport default BeerList;\n","import BeerList from 'components/BeerList/BeerList';\nimport { useEffect } from 'react';\nimport useBeerStore from 'utils/store';\n\nconst MainPage = () => {\n  const fetchBeerList = useBeerStore(state => state.fetchBeerList);\n\n  useEffect(() => {\n    localStorage.clear();\n    fetchBeerList(1);\n  }, [fetchBeerList]);\n\n  return <BeerList />;\n};\n\nexport default MainPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.punkapi.com/v2/beers';\n\nexport const getBeersList = async numberPage => {\n  const { data } = await axios.get('', {\n    params: {\n      page: numberPage,\n    },\n  });\n  return data;\n};\n","import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\nimport { getBeersList } from './services';\n\nconst useBeerStore = create(\n  persist(\n    (set, get) => ({\n      beerList: [],\n      page: 1,\n      selectedBeers: [],\n      isFetched: false,\n      isLoading: false,\n\n      fetchBeerList: async page => {\n        const { isFetched, isLoading } = get();\n        if (isFetched || isLoading) {\n          return;\n        }\n\n        set({ isLoading: true });\n\n        try {\n          const data = await getBeersList(page);\n          set(state => ({\n            beerList: [...state.beerList, ...data],\n            isFetched: true,\n          }));\n        } catch (error) {\n          alert(error.message);\n        } finally {\n          set({ isLoading: false });\n        }\n      },\n\n      toggleBeerSelection: id => {\n        set(state => {\n          const isSelected = state.selectedBeers.includes(id);\n          const updatedSelectedBeers = isSelected\n            ? state.selectedBeers.filter(beerId => beerId !== id)\n            : [...state.selectedBeers, id];\n          return { selectedBeers: updatedSelectedBeers };\n        });\n      },\n\n      deleteSelectedBeers: () => {\n        set(state => {\n          const filteredBeerList = state.beerList.filter(\n            beer => !state.selectedBeers.includes(beer.id)\n          );\n\n          if (filteredBeerList.length === 0) {\n            const nextPage = state.page + 1;\n            state.isFetched = false;\n            state.fetchBeerList(nextPage);\n            return {\n              beerList: filteredBeerList,\n              selectedBeers: [],\n              page: nextPage,\n            };\n          }\n\n          return {\n            beerList: filteredBeerList,\n            selectedBeers: [],\n            page: state.page,\n          };\n        });\n      },\n    }),\n    {\n      name: 'beer-store',\n      storage: createJSONStorage(() => localStorage),\n      onRehydrate: state => {\n        if (state.page === 1) {\n          state.beerList = [];\n        }\n      },\n    }\n  )\n);\n\nexport default useBeerStore;\n"],"names":["Item","styled","ItemWrapper","memo","id","name","imageUrl","handleRightClick","selected","onContextMenu","event","to","style","background","src","alt","BeerListContainer","DeleteButton","isVisible","beersList","useBeerStore","state","beerList","toggleBeerSelection","selectedBeers","deleteSelectedBeers","useState","isButtonVisible","setIsButtonVisible","useEffect","length","preventDefault","onClick","slice","map","image_url","includes","fetchBeerList","localStorage","clear","axios","getBeersList","numberPage","params","page","data","create","persist","set","get","isFetched","isLoading","alert","message","filter","beerId","filteredBeerList","beer","nextPage","storage","createJSONStorage","onRehydrate"],"sourceRoot":""}