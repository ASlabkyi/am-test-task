{"version":3,"file":"static/js/979.a7397484.chunk.js","mappings":"2OAEaA,EAAcC,EAAAA,EAAAA,GAAH,+C,SCcxB,EAZoB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,+BACE,SAACF,EAAD,UAAcE,KAGnB,ECRYC,EAAYF,EAAAA,EAAAA,IAAH,kcA+BTG,EAAiBH,EAAAA,EAAAA,IAAH,mHCzBrBI,GAAWJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,kJAkDd,EAxCmB,WAAO,IAAD,IACjBM,GAAWC,EAAAA,EAAAA,MACXC,EAAW,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACpCC,GAAOC,EAAAA,EAAAA,MAAPD,GAIFE,GAFgBC,EAAAA,EAAAA,KAAdC,UAEuBC,MAAK,SAAAC,GAAI,OAAIA,EAAKN,KAAOO,SAASP,EAAzB,IAExC,GAAKE,EAAL,CAKA,IACEM,EAIEN,EAJFM,KACWC,EAGTP,EAHFQ,UACAC,EAEET,EAFFS,YACcC,EACZV,EADFW,aAEF,OACE,UAACtB,EAAD,YACE,SAACE,EAAD,CAAUqB,GAAIjB,EAAaC,MAAO,CAAEC,KAAMJ,GAA1C,sBAGA,SAACH,EAAD,WACE,gBAAKuB,IAAKN,EAAUO,IAAKR,OAE3B,wBAAKA,KACL,uBAAIG,KACJ,oDACA,wBACGC,EAAYK,KAAI,SAAC3B,EAAM4B,GAAP,OACf,SAAC,EAAD,CAAyB5B,KAAMA,GAAb4B,EADH,QApBtB,CAFCC,MAAM,iBA4BT,C,wHCtDDC,EAAAA,EAAAA,SAAAA,QAAyB,mCAElB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFACHF,EAAAA,EAAAA,IAAU,GAAI,CACnCG,OAAQ,CACNC,KAAMF,KAHgB,uBAClBG,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDCCnBC,GAAeC,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,KACE,SAACC,EAAKC,GAAN,MAAe,CACbC,SAAU,GACVP,KAAM,EACNQ,cAAe,GACfC,WAAW,EACXC,WAAW,EAEXC,cAAc,WAAD,wBAAE,WAAMX,GAAN,kFACoBM,IAAzBG,EADK,EACLA,UAAWC,EADN,EACMA,WACfD,IAAaC,EAFJ,wDAMbL,EAAI,CAAEK,WAAW,IANJ,kBASQb,EAAaG,GATrB,OASLC,EATK,OAUXI,GAAI,SAAA/B,GAAK,MAAK,CACZiC,UAAS,OAAKN,GACdQ,WAAW,EAFJ,IAVE,kDAeXd,MAAM,KAAMiB,SAfD,yBAiBXP,EAAI,CAAEK,WAAW,IAjBN,6EAAF,mDAAC,GAqBdG,oBAAqB,SAAArC,GACnB6B,GAAI,SAAA/B,GAKF,MAAO,CAAEkC,cAJUlC,EAAMkC,cAAcM,SAAStC,GAE5CF,EAAMkC,cAAcO,QAAO,SAAAC,GAAM,OAAIA,IAAWxC,CAAf,IADE,kBAE/BF,EAAMkC,eAFyB,CAEVhC,IAE9B,GACF,EAEDyC,oBAAqB,WACnBZ,GAAI,SAAA/B,GACF,IAAM4C,EAAmB5C,EAAMiC,SAASQ,QACtC,SAAAjC,GAAI,OAAKR,EAAMkC,cAAcM,SAAShC,EAAKN,GAAvC,IAGN,GAAgC,IAA5B0C,EAAiBC,OAAc,CACjC,IAAMC,EAAW9C,EAAM0B,KAAO,EAG9B,OAFA1B,EAAMmC,WAAY,EAClBnC,EAAMqC,cAAcS,GACb,CACLb,SAAUW,EACVV,cAAe,GACfR,KAAMoB,EAET,CAED,MAAO,CACLb,SAAUW,EACVV,cAAe,GACfR,KAAM1B,EAAM0B,KAEf,GACF,EA7DH,GA+DA,CACEhB,KAAM,aACNqC,SAASC,EAAAA,EAAAA,KAAkB,kBAAMC,YAAN,IAC3BC,YAAa,SAAAlD,GACQ,IAAfA,EAAM0B,OACR1B,EAAMiC,SAAW,GAEpB,KAKM5B,EAAgB,WAO3B,MAAO,CACLC,UAPgBsB,GAAa,SAAA5B,GAAK,OAAIA,EAAMiC,QAAV,IAQlCM,oBAP0BX,GAAa,SAAA5B,GAAK,OAAIA,EAAMuC,mBAAV,IAQ5CL,cAPoBN,GAAa,SAAA5B,GAAK,OAAIA,EAAMkC,aAAV,IAQtCS,oBAP0Bf,GAAa,SAAA5B,GAAK,OAAIA,EAAM2C,mBAAV,IAQ5CN,cAPoBT,GAAa,SAAA5B,GAAK,OAAIA,EAAMqC,aAAV,IASzC,C","sources":["components/FoodPairing/FoodPairing.styled.jsx","components/FoodPairing/FoodPairing.jsx","pages/BeerSinglePage/BeerSingle.styled.jsx","pages/BeerSinglePage/BeerSingle.jsx","utils/services.js","utils/store.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FoodElement = styled.li`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { FoodElement } from './FoodPairing.styled';\n\nconst FoodPairing = ({ food }) => {\n  return (\n    <>\n      <FoodElement>{food}</FoodElement>\n    </>\n  );\n};\n\nFoodPairing.propTypes = {\n  food: PropTypes.string.isRequired,\n};\n\nexport default FoodPairing;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  padding-top: 20px;\n\n  img {\n    max-height: 100%;\n    overflow: hidden;\n  }\n  p {\n    font-size: 1.5rem;\n    margin: 0.5rem 0;\n    width: 90vh;\n    text-align: center;\n  }\n\n  h2 {\n    font-size: 24px;\n    margin-bottom: 0.5rem;\n  }\n\n  h4 {\n    font-size: 1.2rem;\n    margin-top: 1rem;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 400px;\n`;\n","import { Link, useLocation, useParams } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { useBeersStore } from 'utils/store';\n\nimport FoofPairing from 'components/FoodPairing/FoodPairing';\n\nimport { Container, ImageContainer } from './BeerSingle.styled';\n\nconst BackLink = styled(Link)`\n  margin-bottom: 1rem;\n  color: #0077ff;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst BeerSingle = () => {\n  const location = useLocation();\n  const detailsLink = location.state?.from ?? '/';\n  const { id } = useParams();\n\n  const { beersList } = useBeersStore();\n\n  const selectedBeer = beersList.find(beer => beer.id === parseInt(id));\n\n  if (!selectedBeer) {\n    alert('Page not found');\n    return;\n  }\n\n  const {\n    name,\n    image_url: imageUrl,\n    description,\n    food_pairing: foodPairing,\n  } = selectedBeer;\n  return (\n    <Container>\n      <BackLink to={detailsLink} state={{ from: location }}>\n        Go Back\n      </BackLink>\n      <ImageContainer>\n        <img src={imageUrl} alt={name} />\n      </ImageContainer>\n      <h2>{name}</h2>\n      <p>{description}</p>\n      <h4>It tastes better with </h4>\n      <ul>\n        {foodPairing.map((food, index) => (\n          <FoofPairing key={index} food={food} />\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default BeerSingle;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.punkapi.com/v2/beers';\n\nexport const getBeersList = async numberPage => {\n  const { data } = await axios.get('', {\n    params: {\n      page: numberPage,\n    },\n  });\n  return data;\n};\n","import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\nimport { getBeersList } from './services';\n\nconst useBeerStore = create(\n  persist(\n    (set, get) => ({\n      beerList: [],\n      page: 1,\n      selectedBeers: [],\n      isFetched: false,\n      isLoading: false,\n\n      fetchBeerList: async page => {\n        const { isFetched, isLoading } = get();\n        if (isFetched || isLoading) {\n          return;\n        }\n\n        set({ isLoading: true });\n\n        try {\n          const data = await getBeersList(page);\n          set(state => ({\n            beerList: [...data],\n            isFetched: true,\n          }));\n        } catch (error) {\n          alert(error.message);\n        } finally {\n          set({ isLoading: false });\n        }\n      },\n\n      toggleBeerSelection: id => {\n        set(state => {\n          const isSelected = state.selectedBeers.includes(id);\n          const updatedSelectedBeers = isSelected\n            ? state.selectedBeers.filter(beerId => beerId !== id)\n            : [...state.selectedBeers, id];\n          return { selectedBeers: updatedSelectedBeers };\n        });\n      },\n\n      deleteSelectedBeers: () => {\n        set(state => {\n          const filteredBeerList = state.beerList.filter(\n            beer => !state.selectedBeers.includes(beer.id)\n          );\n\n          if (filteredBeerList.length === 0) {\n            const nextPage = state.page + 1;\n            state.isFetched = false;\n            state.fetchBeerList(nextPage);\n            return {\n              beerList: filteredBeerList,\n              selectedBeers: [],\n              page: nextPage,\n            };\n          }\n\n          return {\n            beerList: filteredBeerList,\n            selectedBeers: [],\n            page: state.page,\n          };\n        });\n      },\n    }),\n    {\n      name: 'beer-store',\n      storage: createJSONStorage(() => localStorage),\n      onRehydrate: state => {\n        if (state.page === 1) {\n          state.beerList = [];\n        }\n      },\n    }\n  )\n);\n\nexport const useBeersStore = () => {\n  const beersList = useBeerStore(state => state.beerList);\n  const toggleBeerSelection = useBeerStore(state => state.toggleBeerSelection);\n  const selectedBeers = useBeerStore(state => state.selectedBeers);\n  const deleteSelectedBeers = useBeerStore(state => state.deleteSelectedBeers);\n  const fetchBeerList = useBeerStore(state => state.fetchBeerList);\n\n  return {\n    beersList,\n    toggleBeerSelection,\n    selectedBeers,\n    deleteSelectedBeers,\n    fetchBeerList,\n  };\n};\n"],"names":["FoodElement","styled","food","Container","ImageContainer","BackLink","Link","location","useLocation","detailsLink","state","from","id","useParams","selectedBeer","useBeersStore","beersList","find","beer","parseInt","name","imageUrl","image_url","description","foodPairing","food_pairing","to","src","alt","map","index","alert","axios","getBeersList","numberPage","params","page","data","useBeerStore","create","persist","set","get","beerList","selectedBeers","isFetched","isLoading","fetchBeerList","message","toggleBeerSelection","includes","filter","beerId","deleteSelectedBeers","filteredBeerList","length","nextPage","storage","createJSONStorage","localStorage","onRehydrate"],"sourceRoot":""}